#pragma once
#include <Arduino.h>

/*
 * Таблица для перевода 24 бит аудиоданных
 * в диапазон -96 -- +10 дБ
 *
 * -inf, -96, -95, ..., +10 дБ
 */
const DRAM_ATTR uint32_t db_calibration_24bit[] = {
    0,        265,      297,      334,      375,      420,      472,      530,
    594,      667,      748,      840,      942,      1058,     1187,     1332,
    1494,     1677,     1881,     2111,     2369,     2658,     2982,     3346,
    3755,     4213,     4727,     5304,     5952,     6678,     7493,     8408,
    9434,     10585,    11876,    13326,    14952,    16776,    18823,    21120,
    23697,    26589,    29834,    33474,    37559,    42141,    47284,    53053,
    59527,    66790,    74940,    84084,    94344,    105856,   118773,   133265,
    149526,   167771,   188242,   211212,   236983,   265900,   298345,   334748,
    375594,   421424,   472845,   530541,   595277,   667912,   749410,   840852,
    943451,   1058570,  1187735,  1332661,  1495270,  1677721,  1882434,  2112125,
    2369844,  2659009,  2983457,  3347494,  3755950,  4214245,  4728461,  5305421,
    5952780,  6679129,  7494106,  8408525,  9434521,  10585707, 11877358, 13326615,
    14952708, 16777215, 18824300, 21121300, 23698400, 26590100, 29834600, 33474900,
    37559500, 42142500, 47284600, 53054200
};

/* 
 * тут я вообще нифига не понял, как SigmaStudio
 * делает из дробных чисел вот это вот
 * 
 * децибелы или что это вообще такое?
*/
const byte sigmastudio_fractions[][3] = {
    { 0x00, 0x00, 0x00 }, // .0
    { 0x19, 0x99, 0x9A }, // .1
    { 0x33, 0x33, 0x33 }, // .2
    { 0x4C, 0xCC, 0xCD }, // .3
    { 0x66, 0x66, 0x66 }, // .4
    { 0x80, 0x00, 0x00 }, // .5
    { 0x99, 0x99, 0x9A }, // .6
    { 0xB3, 0x33, 0x33 }, // .7
    { 0xCC, 0xCC, 0xCD }, // .8
    { 0xE6, 0x66, 0x66 }  // .9
};

const byte ss_reverbtime[][8] = {
    { 0x00, 0xC7, 0xEF, 0x9E, 0x00, 0x63, 0xF7, 0xCF },
    { 0x00, 0xD4, 0x39, 0x58, 0x00, 0x6A, 0x1C, 0xAC },
    { 0x00, 0xE0, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00 },
    { 0x00, 0xEC, 0x08, 0x31, 0x00, 0x76, 0x04, 0x19 }
};

const byte ss_rev_hf_damping[][4] = {
    { 0x00, 0x47, 0xEF, 0x9E },
    { 0x00, 0x30, 0x20, 0xC5 },
    { 0x00, 0x1B, 0xE7, 0x6D }
};

const byte ss_rev_bass_gain[][4] = {
    { 0xFF, 0xE0, 0x00, 0x00 },
    { 0xFF, 0xF0, 0x00, 0x00 },
    { 0x00, 0x00, 0x00, 0x00 }
};